[
	{
		"name": "Param",
		"type": "struct",
		"fields": [
			{
				"name": "type",
				"type": "string",
				"setter": false
			},
			{ "name": "id", "type": "string", "setter": false },
			{ "name": "name", "type": "string", "setter": false },
			{ "name": "desc", "type": "string", "setter": false },
			{
				"name": "doc",
				"type": "string",
				"optional": true,
				"setter": false,
				"default": { "zig": "null" }
			},
			{
				"name": "update",
				"type": "UpdateBehavior",
				"setter": false,
				"default": { "zig": ".event" }
			},
			{ "name": "body", "type": "ParamBody", "setter": false }
		]
	},
	{
		"name": "ParamBody",
		"type": "union",
		"fields": [
			{ "name": "choice", "type": "ChoiceParam", "setter": false },
			{ "name": "color", "type": "ColorParam", "setter": false },
			{ "name": "range", "type": "RangeParam", "setter": false }
		]
	},
	{
		"name": "UpdateBehavior",
		"type": "enum",
		"tag": "u8",
		"values": ["event", "reload"]
	},
	{
		"name": "ChoiceParam",
		"type": "struct",
		"fields": [
			{
				"name": "default",
				"type": "string",
				"optional": true,
				"setter": false,
				"default": { "zig": "null" }
			},
			{
				"name": "options",
				"type": "Option",
				"tag": "slice",
				"doc": "In Zig, use `genart.options()` to wrap",
				"const": true,
				"setter": false
			}
		],
		"body": {
			"ts": {
				"decl": "asParam(parent: Param): ReturnType<typeof $genart.params.choice>;",
				"impl": [
					"asParam(parent: Param) {",
					"return $genart.params.choice<string>({",
					"name: parent.name.deref(),",
					"desc: parent.desc.deref(),",
					"doc: parent.doc.deref() || undefined,",
					"update: <any>UpdateBehavior[parent.update],",
					"default: this.default.deref() || undefined,",
					"options: this.options.map((x) => x.label.addr ? [x.value.deref(), x.label.deref()]: x.value.deref()),",
					"});",
					"}"
				]
			}
		}
	},
	{
		"name": "Option",
		"type": "struct",
		"fields": [
			{ "name": "value", "type": "string" },
			{
				"name": "label",
				"type": "string",
				"optional": true,
				"default": { "zig": "null" }
			}
		]
	},
	{
		"name": "ColorParam",
		"type": "struct",
		"fields": [
			{
				"name": "default",
				"type": "string",
				"optional": true,
				"setter": false,
				"default": { "zig": "null" }
			}
		],
		"body": {
			"ts": {
				"decl": "asParam(parent: Param): ReturnType<typeof $genart.params.color>;",
				"impl": [
					"asParam(parent: Param) {",
					"return $genart.params.color({",
					"name: parent.name.deref(),",
					"desc: parent.desc.deref(),",
					"doc: parent.doc.deref() || undefined,",
					"update: <any>UpdateBehavior[parent.update],",
					"default: this.default.deref() || undefined,",
					"});",
					"}"
				]
			}
		}
	},
	{
		"name": "RangeParam",
		"type": "struct",
		"fields": [
			{
				"name": "default",
				"type": "f64",
				"setter": false,
				"default": { "zig": "std.math.inf(f64)" }
			},
			{ "name": "min", "type": "f64", "default": 0, "setter": false },
			{ "name": "max", "type": "f64", "default": 100, "setter": false },
			{ "name": "step", "type": "f64", "default": 1, "setter": false },
			{ "name": "exponent", "type": "f64", "default": 1, "setter": false }
		],
		"body": {
			"ts": {
				"decl": "asParam(parent: Param): ReturnType<typeof $genart.params.range>;",
				"impl": [
					"asParam(parent: Param) {",
					"return $genart.params.range({",
					"name: parent.name.deref(),",
					"desc: parent.desc.deref(),",
					"doc: parent.doc.deref() || undefined,",
					"update: <any>UpdateBehavior[parent.update],",
					"default: isFinite(this.default) ? this.default : undefined,",
					"min: this.min,",
					"max: this.max,",
					"step: this.step,",
					"exponent: this.exponent,",
					"});",
					"}"
				]
			}
		}
	}
]
