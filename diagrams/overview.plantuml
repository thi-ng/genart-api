@startuml
title Art player initialization
autonumber 1.1
skinparam pageMargin 10

participant Browser
participant ArtPiece
participant API
participant PlatformAdapter
participant TimingProvider

activate Browser
	== Startup ==

	Browser -> Browser : Load HTML w/ GenArt API script
	Browser -> PlatformAdapter : Load platform adapter
	Browser --> TimingProvider : Load custom timing provider
	note right
		optional, by default uses
		`timingProviderRAF()`
	end note
	Browser -> ArtPiece : Load art piece script
	activate API
		API -> API : Initialize
		activate PlatformAdapter
		PlatformAdapter -> PlatformAdapter : Initialize (optional)
		PlatformAdapter -> PlatformAdapter : Initialize PRNG
		note left : Seeded/deterministic
		PlatformAdapter -> PlatformAdapter : Set execution mode
		note left : Play / Preview / Edit
		TimingProvider -> TimingProvider : Initialize (optional)
		
		PlatformAdapter -> API : Register adapter
		deactivate PlatformAdapter
	deactivate API

	activate ArtPiece
		loop
			ArtPiece -> ArtPiece : Wait for adapter registration
		end
		ArtPiece -> API : Declare & register param specs
		note left
			`$genart.setParams({...})`
		end note
		API -> API : Validate params specs
		note right : Ensure valid param types
		API -> API : Add missing default values
		API -> PlatformAdapter : Update/augment params

		activate PlatformAdapter
			PlatformAdapter -> PlatformAdapter : Load & parse params
			note right
				source param values via
				platform-specific means
			end note
			PlatformAdapter --> API : Param values
		deactivate PlatformAdapter
		API -> API : Validate & apply param overrides
		API --> ArtPiece : Typesafe param getter function

		ArtPiece -> API : Request screen config
		API -> PlatformAdapter : Request screen config
		note right : optionally define resolution
		PlatformAdapter --> API : Config
		API --> ArtPiece : Config
		ArtPiece -> ArtPiece : Initialize
		ArtPiece -> API : Get param value
		activate API
			API -> API : Delegate to param impl
			API --> ArtPiece : Param value
		deactivate API

		== Animation loop ==
		ArtPiece ->	API : Register update/draw function
		API -> TimingProvider : Start (reset timestamp)
	deactivate ArtPiece

	activate API
		loop Animation loop
			API -> TimingProvider : Request timestamp
			TimingProvider --> API : Timestamp
			API -> ArtPiece : Call update w/ timestamp
			ArtPiece -> ArtPiece : Generate next frame
			ArtPiece --> API : Notify screen capture (once, after X seconds)
			API -> PlatformAdapter : Handle screen capture
		end
	deactivate API

deactivate Browser

@enduml