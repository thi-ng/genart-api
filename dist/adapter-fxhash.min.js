"use strict";(()=>{var l={bigint:"bigint",binary:"bytes",choice:"select",color:"color",range:"number",toggle:"boolean",text:"string",vector:"number",weighted:"select",xy:"number"},u={reload:"page-reload",event:"sync"},{prng:{sfc32:f},utils:{equiv:m,isString:g,hashString:P}}=$genart,h=class{_searchParams;_params;_cache={};_adaptations={};_prng;_screen;constructor(){this._searchParams=new URLSearchParams(location.search),this._screen=this.screen,this.initPRNG(),$genart.on("genart:state-change",({state:t})=>{t==="ready"&&$genart.start()}),$fx.on("params:update",(...t)=>{let[n,a]=Object.entries(t[0])[0],e=this._adaptations[n];e&&(n=e.id,a=e.adapt(a));let d=this._params?.[n];return d?m(this._cache[n],a)?!1:(this._cache[n]=a,d.update!=="reload"&&$genart.setParamValue(n,a),!0):(this.warn(`ignoring change for unknown param: ${n}...`),!1)},()=>{}),window.addEventListener("resize",()=>{let{width:t,height:n,dpr:a}=this._screen,e=this.screen;(t!==e.width||n!==e.height||a!==e.dpr)&&(this._screen=e,$genart.emit({type:"genart:resize",screen:e}))})}get id(){return"@genart-api/adapter-fxhash"}get mode(){return{standalone:"play",capture:"preview",minting:"edit"}[$fx.context]}get screen(){return{width:window.innerWidth,height:window.innerHeight,dpr:window.devicePixelRatio||1}}get prng(){return this._prng}configure(t){}async updateParam(t,n){let a;if(Object.values(this._adaptations).find(e=>e.id===t))return a=this._cache[t],{value:a};if(a=$fx.getParam(t),console.log(`${this.id}:`,t,"new value",a,"cached",this._cache[t]),!(a==null||m(this._cache[t],a)))return this._cache[t]=a,{value:a}}async initParams(t){this._params=t;let n=[];for(let a in t){let e=t[a],d=l[e.type];if(!d){this.warn(`unsupported type '${e.type}' for param id: ${a}, skipping...`);continue}let o={id:a,name:e.name,type:d,default:e.default,update:u[e.update]};switch(n.push(o),this._cache[a]=e.default,e.type){case"bigint":{let{min:r,max:s}=e;o.options={min:r,max:s};break}case"binary":{let{maxLength:r}=e;o.update="code-driven",o.options={length:r};break}case"choice":{let{options:r}=e;o.options={options:r.map(s=>g(s)?s:s[0])};break}case"color":{this._adaptations[a]={id:a,adapt:r=>g(r)?r:r.hex.rgb},o.default&&(o.default=o.default.substring(1));break}case"range":{let{min:r,max:s,step:c}=e;o.options={min:r,max:s,step:c};break}case"text":{let{minLength:r,maxLength:s}=e;o.options={minLength:r,maxLength:s};break}case"vector":{n.pop();let r=e,s=r.size,c=r.labels;for(let i=0;i<s;i++){let p={...o};p.id=a+"__"+c[i],p.name=r.name+` (${c[i]})`,p.options={min:r.min[i],max:r.max[i],step:r.step[i]},r.default&&(p.default=r.default[i]),n.push(p),this._adaptations[p.id]=this.adaptVectorParam(a,i)}break}case"weighted":{let{options:r}=e;o.options={options:r.map(s=>s[1])};break}case"xy":{n.pop();let r="XY",s=e;for(let c=0;c<2;c++){let i={...o};i.id=a+"__"+r[c],i.name=s.name+` (${r[c]})`,i.options={min:0,max:1,step:.001},s.default&&(i.default=s.default[c]),n.push(i),this._adaptations[i.id]=this.adaptVectorParam(a,c)}}}}$fx.params(n);for(let[a,e]of Object.entries(this._adaptations)){let d=$fx.getParam(a);d!=null&&(this._cache[e.id]=e.adapt(d))}}setTraits(t){$fx.features(t)}capture(t){$fx.preview()}reload(){console.log(`${this.id} reloading with new params:`,this._searchParams.toString()),location.search=this._searchParams.toString()}initPRNG(){let t=P($fx.hash),n=()=>f(t);this._prng={seed:$fx.hash,rnd:n(),reset:n}}adaptVectorParam(t,n){return{id:t,adapt:a=>{let e=this._cache[t].slice();return e[n]=a,e}}}warn(t,...n){console.warn(`${this.id}:`,t,...n)}};$genart.setAdapter(new h);})();
