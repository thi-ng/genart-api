"use strict";(()=>{var l={bigint:"bigint",binary:"bytes",choice:"select",color:"color",range:"number",toggle:"boolean",text:"string",vector:"number",weighted:"select",xy:"number"},u={reload:"page-reload",event:"sync"},{prng:{defPRNG:f,sfc32:P},utils:{equiv:m,isString:g,hashString:_}}=$genart,h=class{_searchParams;_params;_cache={};_adaptations={};_prng;_screen;constructor(){this._searchParams=new URLSearchParams(location.search),this._screen=this.screen,$genart.on("genart:state-change",({state:r})=>{r==="ready"&&$genart.start()}),$fx.on("params:update",(...r)=>{let[n,a]=Object.entries(r[0])[0],e=this._adaptations[n];e&&(n=e.id,a=e.adapt(a));let d=this._params?.[n];return d?m(this._cache[n],a)?!1:(this._cache[n]=a,d.update!=="reload"&&$genart.setParamValue(n,a),!0):(this.warn(`ignoring change for unknown param: ${n}...`),!1)},()=>{}),window.addEventListener("resize",()=>{let{width:r,height:n,dpr:a}=this._screen,e=this.screen;(r!==e.width||n!==e.height||a!==e.dpr)&&(this._screen=e,$genart.emit({type:"genart:resize",screen:e}))})}get id(){return"@genart-api/adapter-fxhash"}get mode(){return{standalone:"play",capture:"preview",minting:"edit"}[$fx.context]}get screen(){return{width:window.innerWidth,height:window.innerHeight,dpr:window.devicePixelRatio||1}}get prng(){return this._prng||(this._prng=f($fx.hash,_($fx.hash),P))}configure(r){}async updateParam(r,n){let a;if(Object.values(this._adaptations).find(e=>e.id===r))return a=this._cache[r],{value:a};if(a=$fx.getParam(r),console.log(`${this.id}:`,r,"new value",a,"cached",this._cache[r]),!(a==null||m(this._cache[r],a)))return this._cache[r]=a,{value:a}}async initParams(r){this._params=r;let n=[];for(let a in r){let e=r[a],d=l[e.type];if(!d){this.warn(`unsupported type '${e.type}' for param id: ${a}, skipping...`);continue}let o={id:a,name:e.name,type:d,default:e.default,update:u[e.update]};switch(n.push(o),this._cache[a]=e.default,e.type){case"bigint":{let{min:t,max:s}=e;o.options={min:t,max:s};break}case"binary":{let{maxLength:t}=e;o.update="code-driven",o.options={length:t};break}case"choice":{let{options:t}=e;o.options={options:t.map(s=>g(s)?s:s[0])};break}case"color":{this._adaptations[a]={id:a,adapt:t=>g(t)?t:t.hex.rgb},o.default&&(o.default=o.default.substring(1));break}case"range":{let{min:t,max:s,step:c}=e;o.options={min:t,max:s,step:c};break}case"text":{let{minLength:t,maxLength:s}=e;o.options={minLength:t,maxLength:s};break}case"vector":{n.pop();let t=e,s=t.size,c=t.labels;for(let i=0;i<s;i++){let p={...o};p.id=a+"__"+c[i],p.name=t.name+` (${c[i]})`,p.options={min:t.min[i],max:t.max[i],step:t.step[i]},t.default&&(p.default=t.default[i]),n.push(p),this._adaptations[p.id]=this.adaptVectorParam(a,i)}break}case"weighted":{let{options:t}=e;o.options={options:t.map(s=>s[1])};break}case"xy":{n.pop();let t="XY",s=e;for(let c=0;c<2;c++){let i={...o};i.id=a+"__"+t[c],i.name=s.name+` (${t[c]})`,i.options={min:0,max:1,step:.001},s.default&&(i.default=s.default[c]),n.push(i),this._adaptations[i.id]=this.adaptVectorParam(a,c)}}}}$fx.params(n);for(let[a,e]of Object.entries(this._adaptations)){let d=$fx.getParam(a);d!=null&&(this._cache[e.id]=e.adapt(d))}}setTraits(r){$fx.features(r)}capture(r){$fx.preview()}reload(){console.log(`${this.id} reloading with new params:`,this._searchParams.toString()),location.search=this._searchParams.toString()}adaptVectorParam(r,n){return{id:r,adapt:a=>{let e=this._cache[r].slice();return e[n]=a,e}}}warn(r,...n){console.warn(`${this.id}:`,r,...n)}};$genart.setAdapter(new h);})();
